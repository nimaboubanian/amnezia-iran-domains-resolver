name: Weekly Update and Release

on:
  schedule:
    - cron: '0 0 * * 0'  # Runs at 00:00 UTC every Sunday
  workflow_dispatch:  # Allows manual triggering

jobs:
  update_and_release:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Fetch latest domains.txt
      run: |
        LATEST_RELEASE_URL=$(curl -s https://api.github.com/repos/bootmortis/iran-hosted-domains/releases/latest | grep "browser_download_url.*domains\.txt" | cut -d '"' -f 4)
        curl -LO $LATEST_RELEASE_URL
      
    - name: Run script
      run: python domain_resolver.py domains.txt results.json

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.run_number }}
        release_name: Release ${{ github.run_number }}
        draft: false
        prerelease: false

    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./results.json
        asset_name: results.json
        asset_content_type: application/json

    - name: Upload Error Log
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./error_log.txt
        asset_name: error_log.txt
        asset_content_type: text/plain
